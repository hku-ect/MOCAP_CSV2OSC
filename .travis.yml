# This file allows testing your addon using travis CI servers to use it you'll need to
# create an account in travis.org and enable your addon there. 
#
# By default it will test linux 64bit and osx against the master and stable OF branches. 
# Other platforms can be enabled by uncommenting the corresponding sections.
#
# If any extra install is needed to use the addon it can be included in the corresponding
# install script in:
#
# scripts/ci/$TARGET/install.sh
#

env:
  global:
    secure: "JiIyYgiH5TgkUN9xkZSfsAWOLw4n4KnVxt4ZcqLTEbcnSXmWi8dE3W0vWw5Aq3Ckyjidhest3izZdP9AVoyowfTCd6JijiZguQ2lDui/0QBDzY0EjyJ5+vGcd8LVFEquKMPt0dnm3nPeeZwkh+8eAFrhfIdlx/5KUJ+lggYA2rdtirkODxWOY4E1Q89HuBQ7e/TiwFkWN04he3fCQYw9KwBobILByyQXobFJ4jHvm7Ob7kDOSuoC7fuMzgC1U78WT/58WFQCbbVseEaMzudHNEcjd3pji5CJsLhcLbrsHKyvkloLCUkrGr9/2fTkrx+NfA3YYbbGOajA4dVhckZl9TohRhXgonaZEYQ8tizQnQhqzjzjK1ZQt2PRBWqmmFrdN5gAhZ218nyl/KSrri5z/pERq8hwtfxTRwzG1QxUdu7xxOUC8Y0iO1vB43f8+JSpRg4R34E87rNlvrcECgEAboOUEWIP11lj6yI9B3onIPjgCm9zf2RIPd4LyJVL3Dusz56wNH3FOXwOSodh62HufYEB6Y/DBPV85DHyDhie6n54l2OaOZgRbvzPcnh/WPDtPQu8/+fTNUYJvk+0uzFvWTWS9o8DfYYAPNmphS5L0Crzxku6S7SVBtHxgjkidobgJxtRZqavqJ1NFLGzReZl6L5tacSbi/XnjhlsVCX++OI="
addons:
  ssh_known_hosts: pong.hku.nl

language: c++
compiler: gcc
sudo: true
matrix:
  include:
  # fully specify builds, include can't dynamically expand matrix entries
  # relative order of sudo and env is important so that addons: is recognized

# Linux 64bit, OF master
  - os: linux
    dist: trusty
    sudo: required
    env: TARGET="linux64" OF_BRANCH="master"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-4.9
          - g++-4.9
#          - gdb

# Linux 64bit, OF stable:  Not supported yet
  - os: linux
    dist: trusty
    sudo: required
    env: TARGET="linux64" OF_BRANCH="stable"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-4.9
          - g++-4.9

# OSX, OF master
  - os: osx
#    osx_image: xcode8
    compiler: clang
    env: TARGET="osx" OF_BRANCH="stable"

# OSX, OF stable:  Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="osx" OF_BRANCH="stable"

# Linux ARM6, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: required
#    dist: trusty
#    env: TARGET="linuxarmv6l" OF_BRANCH="master"


# Linux ARM6, OF stable:  Not supported yet
#  - os: linux
#    sudo: required
#    dist: trusty
#    env: TARGET="linuxarmv6l" OF_BRANCH="stable"

# Linux ARM7, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="linuxarmv7l" OF_BRANCH="master"
#    cache:
#      directories:
#        - ~/rpi2_toolchain
#        - ~/firmware-master
#        - ~/archlinux

# Linux ARM7, OF stable:  Not supported yet
#  - os: linux
#    sudo: false
#    env: TARGET="linuxarmv7l" OF_BRANCH="stable"
#    cache:
#      directories:
#        - ~/rpi2_toolchain
#        - ~/firmware-master
#        - ~/archlinux


# Emscripten, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="emscripten" OF_BRANCH="master"
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - libstdc++6


# Emscripten, OF stable: Not supported yet
#  - os: linux
#    sudo: false
#    env: TARGET="emscripten" OF_BRANCH="stable"
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - libstdc++6


# iOS, OF master: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="ios" OF_BRANCH="master"


# iOS, OF stable: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="ios" OF_BRANCH="stable"


# tvOS, OF master: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="tvos" OF_BRANCH="master"


# tvOS, OF stable: Not supported yet
#  - os: osx
#    osx_image: xcode8
#    compiler: clang
#    env: TARGET="tvos" OF_BRANCH="stable"


# Android armv7, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="armv7" OF_BRANCH="master"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


# Android armv7, OF stable: Not supported yet
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="armv7" OF_BRANCH="stable"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


# Android x86, OF master: Uncomment following lines to enable 
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="x86" OF_BRANCH="master"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


# Android x86, OF stable: Not supported yet
#  - os: linux
#    sudo: false
#    env: TARGET="android" OPT="x86" OF_BRANCH="stable"
#    cache:
#      directories:
#        - ~/android-ndk-r12b


  # Exclude the default build that would otherwise be generated
  # see https://github.com/travis-ci/travis-ci/issues/1228
  exclude:
    - compiler: gcc

install:
  - cd ~
  - git clone --depth=1 --branch=$OF_BRANCH https://github.com/openframeworks/openFrameworks
  - cd openFrameworks
# fails so we do it ourselves - scripts/ci/$TRAVIS_OS_NAME/install.sh
  - if [ "$TARGET" == "linux64" ]; then 
      sudo scripts/linux/ubuntu/install_dependencies.sh -y;
      if [ -f scripts/linux/download_libs.sh ]; then 
        scripts/linux/download_libs.sh;
      fi
    elif [ "$TARGET" == "osx" ]; then
      brew update;
      brew upgrade coreutils;
      brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb
      if [ -f scripts/$TARGET/download_libs.sh ]; then 
        scripts/$TARGET/download_libs.sh;
      fi
    fi
#  - scripts/linux/compileOF.sh
  - if [ "$TARGET" == "linux64" ]; then
      cd libs/openFrameworksCompiled/project;
      make Debug;
    fi

script:
#  - scripts/ci/addons/build.sh
  - cd $TRAVIS_BUILD_DIR
  - echo "OF_ROOT=$HOME/openFrameworks" >> config.make
#  - sed -i '' "s;..\/..\/..;$HOME\/openFrameworks;g" Project.xcconfig
#  - sed -i '' "s;..\/..\/..;$HOME\/openFrameworks;g" MOCAP_CSV2OSC.xcodeproj/project.pbxproj
  - if [ "$TARGET" == "linux64" ]; then
       make Debug;
    elif [ "$TARGET" == "osx" ]; then
       cd ..;
       mv MOCAP_CSV2OSC ~/openFrameworks/apps/devApps/;
       cd ~/openFrameworks/apps/devApps/MOCAP_CSV2OSC;
       xcodebuild -configuration Release -target MOCAP_CSV2OSC -project "MOCAP_CSV2OSC.xcodeproj";
       cd ..; mv MOCAP_CSV2OSC $TRAVIS_BUILD_DIR; cd $TRAVIS_BUILD_DIR;
       pwd;
    fi

git:
  depth: 10

after_success:
  - cd bin; pwd
  - find .
  - zip -r $( $TRAVIS_REPO_SLUG | cut -d"/" -f2)_${TRAVIS_OS_NAME}.zip *
  - export SSHPASS=$BBPWD
  - sshpass -e scp -o stricthostkeychecking=no *.zip buildbot@pong.hku.nl:public_html/nightly/
#  - cd ..
